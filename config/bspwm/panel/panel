#!/usr/bin/env bash

# Change to the current directory
cd $(dirname $0)

# We use this temporary file 
# to pipe information into 
# while lemonbar reads it in
PANEL_FIFO=/tmp/panel-fifo

# Initialize config variables
source ./config

# Check if we're already running
if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

# IDK
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# Remove any previous FIFO queues using "$PANEL_FIFO"
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"

# Create our FIFO queue
mkfifo "$PANEL_FIFO"

# Pipe workspace information in
bspc subscribe > "$PANEL_FIFO" &

export SCROLL_WIDTH="${SCROLL_WIDTH:-60}"

./title_scroller > "$PANEL_FIFO" &

# Pipe system information in
conky -c ./panel_conky > "$PANEL_FIFO" &

# While "$PANEL_FIFO" is being added to,
# "./panel_parser" reads from it, parses
# it (using the tags that are prepended
# to each chunk), then pipes the result
# to "lemonbar".
cat "$PANEL_FIFO" \
    | ./panel_parser \
    | lemonbar -g ${PANEL_GEOMETRY} \
               -f "$FONT_FAMILY:size=$FONT_SIZE" \
               -f "FontAwesome:antialias=false:size=13" \
               -u $LINEHEIGHT \
               -B $COLOR_BACKGROUND \
               -F $COLOR_FOREGROUND \
    | sh &
# We pipe from "lemonbar" to "sh", because clicking
# buttons on the bar pipes commands to stdout, so
# we need to execute them.

# "Wait" until all these background scripts finish... they won't, 
# but what Bash doesn't know, won't hurt it.
wait
